/*
Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container and n is at least 2.
*/
class Solution {
public:
    int maxArea(vector<int>& height) {
        int contain=0;
        for(int lLine=0,rLine=height.size()-1;lLine!=rLine;)
        {
            contain=max(contain,containCount(lLine,rLine,height));              // update the max area 
            if(height[lLine]>height[rLine])                                     // and move the shorter one towards the other.
                --rLine;
            else
                ++lLine;
        }
        return contain;
    }
    inline int containCount(int l,int r,const vector<int>&height)
    {
        return (r-l)*min(height[l],height[r]);
    }
};
