class Solution {
public:
    int myAtoi(string str) {
        enum{POSITIVE=1};
        enum{NEGATIVE=-1};
        int ret=0;
        int index=0;
        while(str[index]==' ')  {++index;}
        if(index==str.size())
            return 0;
        int sign=POSITIVE;
        if(!ispmsign(str[index])&&!isdigit(str[index]))
            return 0;
        else if(isdigit(str[index]));
        else if(sign=ispmsign(str[index]))
            index++;
        for(;index<str.size();++index)
        {
            if(!isdigit(str[index]))
                return ret*sign;
            int digit=static_cast<int>(str[index]-'0');
            if((sign==POSITIVE&&(ret<INT_MAX/10||(ret==INT_MAX/10&&digit<INT_MAX%10)))
               ||(sign==NEGATIVE&&(ret<-(INT_MIN/10)||(ret==-(INT_MIN/10)&&digit<-(INT_MIN%10)))))
                ret=ret*10+digit;
            else if(sign==POSITIVE)
                return INT_MAX;
            else if(sign==NEGATIVE)
                return INT_MIN;
        }
        return ret*sign;
    }
    int ispmsign(char ch)
    {
        if(ch=='+')
            return 1;
        else if(ch=='-')
            return -1;
        else 
            return 0;
    }
};
