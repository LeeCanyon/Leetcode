class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        enum{SIDE_LENGTH=9};
        enum{DIGIT_NUMS=9};
        enum{BOX_LENGTH=3};
        enum{ROW=0,COLUMN=1,BOX=2,CELL_RCB=3};
        bool digit_exist[CELL_RCB][SIDE_LENGTH][DIGIT_NUMS]{};                      //make a bool table  to record every digit appears or
        for(int row=0;row<SIDE_LENGTH;++row)                                        //not in every row, column and box.
        {
            for(int column=0;column<SIDE_LENGTH;++column)
            {
                if(board[row][column]!='.')
                {
                    int digit=static_cast<int>(board[row][column]-'1');
                    if(digit_exist[ROW][column][digit])
                        return false;
                    else
                        digit_exist[ROW][column][digit]=true;
                    if(digit_exist[COLUMN][row][digit])
                        return false;
                    else
                        digit_exist[COLUMN][row][digit]=true;
                    if(digit_exist[BOX][row/3*3+column/3][digit])
                        return false;
                    else
                        digit_exist[BOX][row/3*3+column/3][digit]=true;
                }
            }
        }
        return true;
    }
};
